#summary Dependency parser: data format

Clear dependency parser currently supports the CoNLL-X format, the Clear dependency format, and the Clear part-of-speech format.
<br><br>

== CoNLL-X format ==

Detailed descriptions about the CoNLL-X data format can be found from [http://nextens.uvt.nl/~conll/#dataformat here].  Among all the fields, the parser requires values for

 * ID: token counter, starting at 1 for each new sentence
 * Form: word form or punctuation symbol
 * Lemma: lemma or stem of word form
 * POSTAG: fine-grained part-of-speech tag
 * HEAD: head ID of the current token
 * DEPREL: dependency relation to the HEAD

Each field is delimited by a tab character (`'\t'`) and each sentence is delimited by a blank line.  Here is an example of this format.  The last two columns (HEAD, DEPREL) are optional for decoding.

{{{
1    Pricing        pricing        _    NN     _    2    NMOD
2    details        detail         _    NNS    _    3    SBJ
3    were           be             _    VBD    _    0    ROOT
4    n't            not            _    RB     _    3    ADV
5    immediately    immediately    _    RB     _    6    AMOD
6    available      available      _    JJ     _    3    PRD
7    .              .              _    .      _    3    P
}}}
<br>

== Clear dependency format ==

The Clear dependency format keeps only fields required for the parser.

 * ID: token counter, starting at 1 for each new sentence
 * Form: word form or punctuation symbol
 * Lemma: lemma or stem of word form
 * POSTAG: fine-grained part-of-speech tag
 * HEAD: head ID of the current token
 * DEPREL: dependency relation to the HEAD

Each field is delimited by a tab character (`'\t'`) and each sentence is delimited by a blank line.  Here is an example of this format.  The last two columns (HEAD, DEPREL) are optional for decoding.

{{{
1    Pricing        pricing        NN     2    NMOD
2    details        detail         NNS    3    SBJ
3    were           be             VBD    0    ROOT
4    n't            not            RB     3    ADV
5    immediately    immediately    RB     6    AMOD
6    available      available      JJ     3    PRD
7    .              .              .      3    P
}}}
<br>

== Clear part-of-speech format ==

The Clear part-of-speech format requires only two fields.

 * Form: word form or punctuation symbol
 * POSTAG: fine-grained part-of-speech tag

Each field is delimited by a tab character (`'\t'`) and each sentence is delimited by a blank line.  The ID field is counted automatically (starting at 1).  The LEMMA field is filled by using our default morphological analyzer, the same analyzer we used for training.  Note that this format is meant only for decoding.  Here is an example of this format.

{{{
Pricing        NN
details        NNS
were           VBD
n't            RB
immediately    RB
available      JJ
.              .
}}}