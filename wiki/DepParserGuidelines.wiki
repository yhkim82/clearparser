#summary Dependency parser: guidelines

_Clear dependency parser_ uses Choi-Nicolov's approach of Nivre's list-based dependency parsing algorithm. The parser gives options of customizing feature templates and choosing different learning algorithms. Clear dependency parser has been imported to several organizations such as CLEAR, J.D. Power & Association, Mayo Clinic. 

== Training ==

{{{
java clear.engine.DepTrain -c <configuration file> -i <input file> -m <model file> -t <feature template file>
java -Xms8g clear.engine.DepTrain -c config/en_dep_config.xml -i dat/sample.dep -m sample.mod -t config/en_dep_feature.xml
}}}

 * configuration file: name of a file specifying [ConfigGuidelines configurations] ([http://code.google.com/p/clearparser/source/browse/trunk/config/en_dep_config.xml config/en_dep_config.xml])
 * input file: name of a file containing dependency trees in either [DataFormat dep or conll format] ([http://code.google.com/p/clearparser/source/browse/trunk/dat/sample.dep dat/sample.dep]).
 * model file: name of a file to contain trained models.
 * feature template file file: name of a file containing [FeatureGuidelines feature templates] ([http://code.google.com/p/clearparser/source/browse/trunk/config/en_dep_feature.xml config/en_dep_feature.xml]).

predicting
java -Xms8g clear.engine.DepPredict -c config/en_dep_config.xml -i wsj/wsj-23.gold -m tmp.mod -o tmp.out

evaluating
java clear.engine.DepEvaluate -g ../dat/wsj/wsj-23.gold -s tmp.txt 
= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages